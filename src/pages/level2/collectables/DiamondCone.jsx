/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 /assets/models/collectables/DiamondCone.glb 
*/

import React, { useRef } from 'react';
import { useGLTF } from '@react-three/drei';
import { RigidBody } from '@react-three/rapier';
import { useMusic } from "../../../components/providers/AudioProvider";

export default function DiamondCone(props) {

  const { name, isCollected, onCollect } = props;
  const { nodes, materials } = useGLTF('/assets/models/collectables/DiamondCone.glb');
  const { handlePlayMusic, playSoundEffect } = useMusic();
  const handleSound = () => {
    playSoundEffect('diamondCollect');
  };
  const rigidBodyRef = useRef();

  const handleIntersectionEnter = (otherObject) => {
    console.log(`${name} entered the collision with ${otherObject.name}`);
    handleSound()
  };

  const handleIntersectionExit = () => {
    console.log(`${name} exited the collision`);
  };

  return (
    <group {...props} dispose={null}>
      <RigidBody
        ref={rigidBodyRef}
        type="fixed"
        colliders="cuboid"
        sensor
        onIntersectionEnter={handleIntersectionEnter}
        onIntersectionExit={handleIntersectionExit}
      >
        <mesh geometry={nodes.Cone.geometry} material={materials.hept32palette} />
      </RigidBody>
    </group>
  );
}

useGLTF.preload('/assets/models/collectables/DiamondCone.glb');
